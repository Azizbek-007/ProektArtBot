from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.dispatcher import FSMContext
from states import PhoneForm
from keyboards.default import phone_number, menu_btn, category_btn
from keyboards.inline import order_btn
from utils.db_api import register_user, get_phone_number, update_phone_number, menu, by_menu,\
get_category, get_message, get_user, by_message
from loader import dp
import re
import asyncio

@dp.message_handler(CommandStart())
async def bot_start(msg: types.Message):
    register_user(msg.from_id, msg.from_user.username, msg.from_user.first_name, msg.from_user.last_name)
    if get_phone_number(msg.from_id):
       await msg.answer_photo(
            photo='https://t.me/biypulmagliwmat/4', 
            caption="–ê—Å—Å–∞–ª–∞—û–º–∞ ”ô–ª–µ–π–∫—É–º", reply_markup=menu_btn())
    else:
        await msg.answer("–ê—Å—Å–∞–ª–∞—û–º–∞ ”ô–ª–µ–π–∫—É–º! –ë–æ—Ç—Ç–∞–Ω —Ç–æ–ª—ã“õ –ø–∞–π–¥–∞–ª–∞–Ω—ã—û —É—à—ã–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑ –∞—Ä“õ–∞–ª—ã –¥–∏–∑–∏–º–Ω–µ–Ω ”©—Ç–∏“£!", reply_markup=phone_number)
        await PhoneForm.next()

@dp.message_handler(state=PhoneForm, content_types=['text', 'contact'])
async def Bot_Phone_Form(msg: types.Message, state: FSMContext):
    try:
        phone = msg.contact.phone_number
    except: phone = msg.text
  
    regex = "^[\+]?(998)?([- (])?(90|91|93|94|95|98|99|33|97|71|75)([- )])?(\d{3})([- ])?(\d{2})([- ])?(\d{2})$"
    if re.search(regex, phone):
        update_phone_number(msg.from_id, phone)
        await msg.answer_photo(
                photo='https://t.me/biypulmagliwmat/14', 
                caption="–ê—Å—Å–∞–ª–∞—û–º–∞ ”ô–ª–µ–π–∫—É–º",
                reply_markup=menu_btn())
        await state.finish()
    else: await msg.reply("–ù–æ–º–µ—Ä “õ”ô—Ç–µ –∫–∏—Ä–∏—Ç–∏–ª–¥–∏! –¢”©–º–µ–Ω–¥–µ–≥–∏ –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–¥–∏ –∂–∏–±–µ—Ä–∏—û —Ç“Ø–π–º–µ—Å–∏–Ω –±–∞—Å—ã“£!")

@dp.callback_query_handler(lambda call: 'order_id=' in call.data)
async def set_order(call: types.CallbackQuery):
    await call.message.answer('üí¨ –†–∞—Ö–º–µ—Ç, –º—É—Ä–∞–∂–∞—Ç—ã–Ω—ã–∑ “õ–∞–±—ã–ª “õ—ã–ª—ã–Ω–¥—ã, “õ–∞–Ω–∏–π–≥–µ–º–∏–∑ —Å–∏–∑ –±–µ–Ω–µ–Ω —Ç–µ–∑ –∞—Ä–∞–¥–∞ –±–∞–π–ª–∞–Ω—ã—Å–∞–¥—ã!')
    m_id = call.data.split('=')[1]
    data_user = get_user(call.from_user.id)[0]
    data_msg = by_message(m_id)
    await dp.bot.send_photo(-1001887267192, 
        photo=data_msg[0][3],
        caption=f"{data_msg[0][2]}\n\nüë§ {data_user[2]}\nüåê @{data_user[1]}\nüìû {data_user[4]}")
    await call.message.delete()
    
@dp.message_handler(content_types=['text'])
async def qeuiz_answer(msg: types.Message):
    if msg.text == '‚û°Ô∏è –ë–∞—Å –±”©–ª–∏–º–≥–µ “õ–∞–π—Ç—ã—û':
        await msg.answer("–ê—Å—Å–∞–ª–∞—û–º–∞ ”ô–ª–µ–π–∫—É–º", reply_markup=menu_btn())
    if msg.text == '–ë–∏–∑ “õ–∞–Ω–¥–∞–π –∏—Å–ª–µ–π–º–∏–∑':
        await msg.answer_photo(
                photo='https://t.me/biypulmagliwmat/6', 
                caption="<b>–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:</b>\n<b>–ß–∞—Å—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å: \nüï∞ 9:00-19:00</b> \n\n<a href='https://www.google.com/maps?q=42.460496,59.610029&ll=42.460496,59.610029&z=16'>–õ–æ–∫–∞—Ü–∏—è</a> \n\n<b>–ù–∞—à –ø–æ–¥—Ö–æ–¥</b> \n\n<b>–ü–æ—à–∞–≥–æ–≤–∞—è –º–µ—Ç–æ–¥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã:</b>\n–ù–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–º–∞–Ω–¥–∞: –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –∏ –¥–∏–∑–∞–π–Ω–µ—Ä –∑–∞–Ω–∏–º–∞—é—Ç—Å—è –¥–∏–∑–∞–π–Ω–æ–º –∏ —á–µ—Ä—Ç–µ–∂–∞–º–∏, –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ç–æ—Ä –ø–æ–¥–±–∏—Ä–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∞ —Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä —Å–ª–µ–¥–∏—Ç –∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è–º–∏. \n\n<b>–°–ª–µ–¥–∏–º –∑–∞ –±—é–¥–∂–µ—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤:</b>\n–ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ —Ç–æ–º, —á—Ç–æ–±—ã –≤—Å–µ –æ—Ç–¥–µ–ª–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –º–µ–±–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –±—ã–ª–∏ —Ä–µ–∞–ª—å–Ω—ã –∏ –∏–º–µ–ª–∏ –∞–¥–µ–∫–≤–∞—Ç–Ω—É—é –±—é–¥–∂–µ—Ç—É —Å—Ç–æ–∏–º–æ—Å—Ç—å. –¶–µ–ª—å‚Äì–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫ –¥–∏–∑–∞–π–Ω—É.\n\n<b>–ù–µ—Ä–µ—à–∞–µ–º—ã—Ö –∑–∞–¥–∞—á –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:</b>\n–ö–∞–∂–¥—ã–π –≥–æ–¥ –≤ –Ω–∞—à–µ–π —Å—Ñ–µ—Ä–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø—Ä–∏—ë–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ú—ã –ø–æ–≥—Ä—É–∂–∞–µ–º—Å—è –≤ —Ç–µ–º—É, –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ —Ä–µ–∞–ª–∏–∑—É–µ–º.", 
                reply_markup=menu_btn())
    if msg.text == '–ë–∏–π–ø—É–ª –º–∞–≥–ª—ã—É–º–∞—Ç':
        data_user = get_user(msg.from_id)[0]
        await msg.reply("–°–∏–∑ –±–µ–Ω–µ–Ω —Ç–µ–∑ –∞—Ä–∞–¥–∞ –∞–¥–º–∏–Ω–ª–µ—Ä–∏–º–∏–∑ –±–∞–π–ª–∞–Ω—ã—Å–∞–¥—ã!", reply_markup=menu_btn())
        await dp.bot.send_message(-1001857875483, f"üë§ {data_user[2]}\nüåê @{data_user[1]}\nüìû {data_user[4]}")
    data = get_category(msg.text)
    if data:
        category_id = data[0][0]
        data_2 = get_message(cate_id=category_id)
        for x in data_2:
            await msg.answer_photo(x[3], x[2], reply_markup=order_btn(x[0]))
            await asyncio.sleep(.07)
    else:
        for x in menu():
            if x[1] == msg.text:
                menu_id = by_menu(msg.text)[0][0]
                await msg.answer(msg.text, reply_markup=category_btn(menu_id))
                await asyncio.sleep(.07)

